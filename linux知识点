第零章 计算机概论
    计算机：接受使用者输入指令与数据，经由中央处理器的数学与逻辑单元运算处理后，产生或者存储成有用的信息

    0.1.1 计算机硬件的五大单元
        主要的三个部分：
            输入单元：
            主机部分： cpu(重点) 内存 硬盘 适配卡设备
            输出单元
        cpu:具有微指令集， 想让主机具备的功能，要参考微指令集，主要工作在于管理与运算
            1. 算数逻辑单元： 负责程序运算与逻辑判断
            2. 控制单元： 协调各周边元件与各单元间的工作
            工作流程：CPU从内存读取数据，内存的数据从输入单元传输进入，cpu处理完毕的数据要先协会内存，然后从内存到输出单元
                ../static/1.计算机的五大基本元件
        tips:
            数据要流经内存在转出，数据流进/流出内存是CPU发布的控制命令
            CPU要处理的数据全部来自内存
    0.1.2 CPU的架构
        cpu内部的指令集：
            精简指令集： 每个指令执行功能单纯，复杂功能需要多个指令合作
            复杂指令集： 单个指令可以执行低阶的硬件操作，指令处理工作较为丰富(X86架构的由来)
        32位/64位：指cpu一次数据读取的最大量，单位是bits。
            cpu读取数据量有限制，从内存中读取的数据也就有限制，一般32位的最大数据量是4GB
        不同的X86架构的CPU主要区别在于微指令集的不用
    0.1.3 其他单元的设备
        主机箱内的设备大都是通过主板连接，主板上面有连接沟通所有设备的芯片组，让CPU可以对这些设备下达命令
            系统单元：包括CPU于内存及相关元件，主板上还有很多与连接接口相关的适配卡
            存储单元：包括内存与辅助内存
            输入输出单元
    0.1.4 运行流程
        跟人体相对比：
            CPU（脑袋）：判断与控制身体各部分的活动
            内存（记忆相关）：实际过程中互动的数据暂时存放的位置，提供给CPU判断用的信息
            硬盘（记忆相关）：永久式存储
            主板（神经系统）： 将重要的元间连接
            周边设备（人类与外界沟通的部分）：与外界互动
            显卡（脑袋中的影像）：显卡产生的数据来源也是CPU控制的额
            电源供应器（心脏）：你懂的
    0.1.5 计算机的分类
        超级计算机/大型计算机/迷你计算机/工作站/微电脑
    0.1.6 常用的计算单位
        1bite是一个0或者1，二进制单位
            1Byte = 8bits  k, kb, MB, G, T, PT....
        CPU的运算速度通常使用MHZ或者Ghz，hz其实是秒分之一。网络传输速度以bite位单位是MB
            20M/5M传输速度理论最大传输值为每秒2.5M/625KB的下载上传速度

0.2 个人电脑结构与相关设备元件
    0.2.1 CPU
        ../static/0.2 主板结构
            北桥:负责连接速度较快的cpu、内存与显卡接口等元件。当前主流框架中，将其整合到CPU的封装中
            南桥: 负责连接速度较慢的设备接口
        不同型号的CPU的较为也不同，
        cpu的频率：CPU每秒可以进行的工作次数。3.6GHZ代表的是每秒可进行 3.6*109 次工作，每次工作可以进行少数的指令运行
            外频：CPU与外部元件进行数据传输时的速度  （调整会超频）
            倍频： 时CPU内部用来加速工作性能的倍数
            两者相乘是CPU的频率速度
                某个CPU，没品位3.0GHz, 外频位333MHz,倍频是9倍
        超线程：将CPU内部的重要的寄存器分为两群，让程序分别使用两群寄存器，可以有两个程序同时竞争CPU的核心，像是同时有两个核心
    0.2.2 内存
        CPU所有的数据都是来自于内存，断电后数据会消失
        双通道设计：但传统的总线宽度一般大约仅达64位，为了要加大这个宽度，因此芯片组厂商就将两个内存汇整在一起，
                如果一支内存可达64位，两支内存就可以达到128位了
        除了内存条，CPU内部还有寄存器，第二层高速缓存内存
        只读存储器（ROM）： BIOS是写在ROM上的，CMOS是记录一些参数配置的，需要额外的电源
            BIOS掌握了系统硬件的详细信息与开机设备的选择等等
    0.2.3 显卡
        显卡上面有一个内存的容量，这个内存容量会影响到屏幕分辨率于色彩深度
    0.2.4 硬盘与存储设备
        ...

0.3 数据表示方式
    电脑常用的数据是二进制的
    0.3.1 数字系统
        二进制与其他进制的转化
    0.3.2 文字编码系统
        编码系统可以当作是字码对照表，当我们输入字符保存首先要按照某个标准转化为二进制数字存放到硬盘上
            之后使用的时候再按照同样的标准进行反转为输入字符。

0.4 软件程序运行
    0.4.1 编译器
        我们需要CPU帮忙的时候，要参考CPU的微指令集，然后撰写让CPU读得懂的指令码给CPU执行
            这就是老程序员的事情了，现在可以通过创造一种让人类看得懂的程序语言，然后通过‘编译器’
            按照某种规则转为机器可以看懂的语言，这样就开发方便很多了
        当然不止这些，想要让CPU执行，就要把程序放到内存中，需要再内存中开辟空间。。。。所以有了操作系统
    0.4.2 操作系统
        操作系统是一组程序，重点在于管理电脑的所有活动以及驱动系统中的所有硬件
            操作系统的核心：功能是让CPU可以开始判断逻辑，内存可以开始载入读取数据。。。。就是硬件的所有动作必须通过操作系统
            只有核心提供的功能，电脑才能完成，
            核心程序放置到内存中的区域是被保护的，开机会一直常驻再内存当中
        系统调用
            操作系统会提供一整组的开发接口给工程师来开发软件，开发者只需要根据对应的接口就可以轻易的开发软件了
            应用程序--》 系统呼叫--》 核心--》 硬件
        tips:
            电脑系统主要由硬件构成，核心程序再管理硬件，提供合理的电脑系统资源分配，只要硬件不同，核心就要进行对应的修改
                所以 软件和核心关系很大，和硬件关系不大
                    硬件和核心关系很大，和软件关系不大
            操作系统只是在管理整个硬件资源，包括CPU、内存、输入输出设备及文件系统文件
            应用程序的开发是参考操作系统提供的开发接口,所以应用程序只能在该操作系统上面运行
        核心功能
            系统调用接口
            程序管理
            内存管理
            文件系统管理
            设备的驱动
        驱动程序是操作系统里面重要的一环，操作系统通常会提供一个开发接口给硬件开发商，他们根据这个接口开发自己的功能

    0.4.3 应用程序


第一章 linux是什么与如何学习
基础知识学习流程
    1. 计算机概论与硬件相关知识
    2. 先从Linux的安装与指令学起
    3. Linux操作系统的基础技能（包括使用者，群组的概念，权限的概念。。。）
    4. vi文书编辑器
    5. shell与shell script的学习
    6. 软件管六元
    7. 网络基础的创建：IP概念，路由概念
    8. 网站架设

第二章 主机规划与磁盘分区
2.1.3 各硬件设备在Linux中的文件名
    linux系统中，几乎所有的硬件设备都在/dev这个目录内，
        sata接口的硬盘文件名称为：/dev/sd[a-d]
        USB闪存盘 ： /dev/sd[a-p]
        virtl/O界面 ： /dev/vd[a-p] 用于虚拟机内
        软盘机 ： /dev/fd[0-7]
        鼠标： /dev/input/mouse[0-15]
    硬盘的基本结构
        # TODO 需要看一下分区的概念
        第一个扇区记录了整颗磁盘的重要信息
2.2.4 磁盘分区的选择
    目录树结构
        挂载： 利用一个目录当做进入点，将磁盘分区的数据放置在该目录下，
            也就是说进入该目录就可以读取该分区的意思，这个动作就是挂载
        根目录是一定要挂载到某个分区之下，但是其他目录是可以按照自己的需求挂载到不同的分区
        初次安装linux,只要发呢去 / 及 swap 即可
4.2.1 开始下达指令
    命令的格式
        command [-options] parameter1 parameter2
          指令       选项        参数        参数
        date  时间  date +%Y/%m/%d/%H%M
        locale  语系的支持
        cal  显示日历  cal month year
        bc  计算机
    重要的几个按键
        tab
           命令补全和文件补齐
           按两次会将所有以当前命令行的字母开头的指令
        ctrl+c
            中止运行中的指令
        CTRL+d
            键盘输入结束，相当于exit，
        shift+pageup/pagedown
            显示内容较多的时候向上翻页或者向下翻页
    错误信息的查看
        通过指令运行错误的显示信息，来确认出现的问题
    --help 求助说明
        指令 --help  显示指令语法与参数
    man page
        man command 展示该指令的详细介绍
        1 使用者在shell环境中可以操作的指令或者可执行文件
        5 配置文件或者是某些文件的格式
        8 系统管理员可用的管理指令
        按空白键下一页  q退出当前环境
        man -f xxx   可以查看系统中还有哪些跟xxx指令相关的说明文档
        到/usr/share/man可以查看man page 的数据
        到/etc/man_db.conf修改搜寻路径
    info page
        # TODO 现在看不进去了
        到/usr/share/doc内可以使用info xxx 查看所有可查看的info文档
    nano文本编辑器
        nano file_name
    关机指令
        sync  将数据同步写入硬盘中的指令
        shutdown  惯用的关机指令
        reboot,halt, poweroff  重新开机，关机
第五章 linux的文件权限与目录配置
    linux将文件可存取的身份分为三类：owner/group/others， 三种身份各有read/write/execute
5.1 使用者与群组  021 65261702
    文件拥有者
    群组概念
    其他人的概念
    信息保存路径
        /etc/password  身份使用者的相关信息保存位置
        /etc/shadow  个人密码记录路径
        /etc/group  群组信息保存路径
5.2 linux文件权限的概念
    5.2.1 文件属性
        ll命令展示的信息
              d      rwxrwxr-x  6    root  root   4096 May 16  2019 redis-5.0.5
            文件类型   文件权限    连接数 拥有者   群组   容量 文件最后呗修改时间 文件名
            第一部分：文件类型
                d: 文件夹
                -： 文件
                l: 连接文件
            第二部分： 文件权限
                r/w/x  : 可读可写可执行
                第一组： 文件拥有者可具备的权限
                第二组： 同群组使用者权限
                第三组： 其他使用者权限
            第三部分： 连接数
                代表有多少文件名连接到此节点
            第四部分： 拥有者，
            第五部分： 拥有者所属群组
            第六部分： 文件的容量大小，默认为bytes
            第七部分： 创建日期或者修改日期
            第八部分： 文件名
        linux文件权限的重要性： 最大的用途是‘数据安全性’方面
            系统保护的功能
            团队开发软件或数据共享的功能
    5.2.2 如何改变文件属性与权限
        chgrp: 改变文件所属群组
        chown: 改变文件拥有者  -R 将此目录下的所有文件或者目录同时改变
            还可以使用 chown 拥有者:群组 文件名
        chmod: 改变文件的权限
            当cp文件的时候，会将权限与拥有者等一起复制，要使用这个命令更改拥有者等等
            rwx:对应数值为421
            chmod 777 文件名
    5.2.3 目录与文件之权限意义
        权限对文件的重要性
            r: 可读取此一文件的实际内容
            w: 可以编辑，新增或是修改文件的内容，但不可以删除
            x: 该文件具有可以被系统执行的权限
                windows文件是否可被执行时借由扩展名判断
                linux下则是是否有X这一权限来决定的
        权限对目录的重要性
            r: 表示有可读取目录结构清单的权限
            w: 可创建删除更名该目录下的文件或者目录
            x: 目录的x代表使用者能否进入该目录成为工作目录的用途
                工作目录就是目前所在的目录
            如果只有r/w权限没有x，代表可以查看文件结构清单但是不是可以进入
            针对某个文件有读写权限则需要对这个文件的上级目录有x权限
        文件具有x属性不代表就可以执行成功，只是具有可执行能力，能不能执行要看文件有没有可执行的数据
        常用扩展名：
            .sh: 脚本或批处理文件
            tar,tar.gz, zip: 压缩软件
            .html, .php: 王爷相关文件
    5.2.4 linux文件种类与扩展名
        正规文件：第一个字符为-
            纯文本文件 可通过cat命令查看
            二进制文件
            数据格式化文件 某些程序在运行的过程中会读取一些特定格式的文件
               用户登录数据会记录在/var/log/wtmp文件内，该文件是一个data file
        目录： 第一个属性为d
        连接文件： l, 类似于windows系统下面的结晶
        设备与设备文件： 与系统周边及储存等相关的文件
            区块设备文件： 储存数据，如硬盘与软盘等 /dev/sda，
            字符设备文件： 鼠标键盘等，设备的特色是一次性读取的
            数据接口文件： 通常被用在网络上的数据承接了
                启动程序监听用户端的需求，用户端可以通过这个socket进行数据的沟通
            数据传输档： FIFO是一种特殊的文件类型，目的解决多个程序同时存取一个文件造成的错误问题
        设备与设备文件最好不要进行修改
5.3 linux目录配置
    5.3.1 linux配置的依据--FHS
    5.3.2 目录树
        目录树的特性
            1. 目录树的起始点为根目录
            2. 每一个目录不止能使用本地端的partition的文件系统，也可以使用网路扫黄那个的filesystem，
                利用network file system (NFS) 服务器挂载某特定目录等
            3. 每一个文件在此目录树中的文件名（包含完整路径）是独一无二的
    5.3.3 绝对路径与相对路径
        绝对路径：文件名从根目录开始写
        相对路径：相对于当前工作目录的路径
第六章 Linux文件与目录管理
    6.1 目录与路径
    6.2 目录的相关操作
        .  此层目录
        .. 上一层目录
        -  前一个工作目录
        ~ 当前使用者身份所在的主文件夹
        常用处理目录的指令
            cd  变换目录
            pwd  显示目前的目录
                -P 不以连接文件的数据显示而显示正确的完整路径
            mkdir  创建一个新的目录
                mkdir -p /t/t1  创建多级目录
                mkdir -m 711 tt  创建文件的权限
            rmdir  删除一个空的目录
                rmdir -p 目录名称   多级删除
    6.1.3 可执行文件路径的变量： $PATH
        echo $PATH: 打印系统环境变量
        PATH='$PATH:/root': 添加环境变量
6.2 文件与目录管理
    6.2.1 文件与目录的检视: ls
        -a : 全部文件（包括隐藏文件）
        -d : 仅列出目录本身
    6.2.2 复制、删除与移动： cp, rm , mv
        cp 来源文件 目标文件
            如果我是root用户，我复制来的文件用户和属组就是root
            -a : 相当于-dr
            -d: 如果是连接文件，则复制连接文件属性
            -r: 递回持续复制，用于目录的复制行为
            -p: 连同文件的属性一起复制，备份常用
            -l: 进行硬式连接的链接文件创建
            -s： 复制为符号连接文件，即捷径文件
        rm 移除文件或目录
            -f: 强制删除
            -i: 询问
            -r: 递归删除
        mv 移动文件与目录，或更名
            -u: 若目标文件已经存在，且source比较新，会更新
    6.2.3 取得路径的文件名称与目录名称
        basename /usr/local/mongo ： 取得mongo文件
        dirname /usr/local/mongo  : 获得目录名
6.3 文件内容查阅
    cat: 由第一行开始显示文件内容
    tac: 从最后一行倒着显示文件内容
    nl: 显示的时候，输出行号
    more: 一页一页的显示文件内容
    less: 相比于More, 可以向前翻页
    head: 只看前几行
    tail: 只看后几行
    od: 二进制方式读取文件内容
    6.3.5 修改文件时间或创建新文件： touch
        modification time(mtime):文件内容数据变更时间
        status time(ctime):文件状态变更的时间
        access time(atime): 文件内容被取用时间
        ls -l --time=atime /etc/man_db.conf ;
        touch -acdmt 文件
            -acm: 对应上述时间，相对于c,文件不存在则创建新文件
6.4 文件与目录的默认权限与隐藏权限
    6.4.1 文件默认权限：umask
        指目前使用者在创建文件或者目录时候的权限默认值
        文件从666,目录是777
        umask: 权限默认时减掉的权限
    6.4.2 文件隐藏属性： chattr(设置文件隐藏属性)
        +-=, i 不能被删除\改名、设置连接、写入或者新增数据
        需使用lsattr命令查看
    6.4.3 文件特殊权限： SUID, SGID, SBIT
    6.4.4 观察文件类型： file
        file 文件名 ： 文件是什么类型的文件
6.4 指令与文件的搜寻
    which 可执行文件   指令是查找$PATH规范的路径
        -a 可以找到所有该文件的路径
    whereis 由特定目录寻找文件/文件名
        -l 列出查找的目录
    locate 文件名
        通过数据库查找，每天更新一次，可以执行一下updatedb在进行locate
    find 全硬盘查找，较慢，但是完整
        可以根据时间，用户，组等进行擦护照
         find / -mtime 0  24小时内动过的文件
         find /home -user dmtsai

第七章 linux磁盘与文件系统管理（342）
7.1 认识linux文件系统
    文件系统是创建在磁盘上面，磁盘的物理组成
    重点在于inode, block, superblock等文件系统的基本部分
    7.1.1 磁盘组成与分区的复习
        磁盘的组成部分：
            原型的盘片（主要记录数据的部分）
            机械手臂与磁头（可读写盘片上的数据）
            主轴马达（转动盘片）
        盘片上的物理组成：
            扇区为最小的物理储存单位，分为512b,4K两种格式
            扇区组成的圆为柱面
            早期分区以柱面为最小分区单位，现在通常使用扇区
            磁盘分区表两种格式，一种是MBR分区表，一种是GPT分区表
                MBR分区表：主要开机区(MBR, 446Byte)及分区表(partition, 64Byte)
    7.1.2 文件系统特性
        格式化： 为了存放文件所需要的数据，将分区进行格式化，以成为操作系统能利用的文件系统格式
        一个可以被挂载的数据为一个文件系统而不是一个分区
        文件系统运行
            superblock: 记录整个文件系统的整体信息，包括inode与block的总量、使用量、剩余量等
            inode: 记录文件的属性， 一个文件占用一个inode, 记录文件的数据所在的block号码
            block: 实际记录文件的内容，若文件太大时，会占用多个block
        索引式文件系统：将所占用的block按照编号一次性取出来
        FAT文件系统： 按照顺序挨个取
    7.1.3 linux的ext2文件系统
        EXT2文件系统在格式化的时候基本上是区分为多个区块群组，每个区块群组有独立的inode/superblock/block
        整体的规划中，文件系统最前面有一个开机扇区，可以安装开机管理程序（制作多重开机的环境）
    7.1.4 与目录树的关系
        目录的内容在记录文件名，一般文件才是实际记录数据内容的地方
        当我们创建目录时，





fb591f3c-b0e09be1-c4f9aaf2-bn2wed5t4y

3efd4b91-51d8a5f0-4f6f5464-236ff